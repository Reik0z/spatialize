name: Upload Release

run-name: Building and uploading release

on:
  push:
    branches: [ feature/actions-test ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install spatialize build

      - name: Build project
        run: python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(python -c "import re; f = open('_version.py').read(); print(re.search(r'__version__ = [\"\\']([^\"\\']+)[\"\\']', f).group(1))")
          echo \"version=$VERSION\" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.get_version.outputs.version }}
          tag_name: v${{ steps.get_version.outputs.version }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

